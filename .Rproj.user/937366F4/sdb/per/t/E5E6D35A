{
    "collab_server" : "",
    "contents" : "---\ntitle: \"LR_REM\"\nauthor: \"Subbiah\"\ndate: \"27 July 2017\"\noutput: html_document\n---\n\nREM for Churn data \n\nData Reference\n\nhttps://bigml.com/user/francisco/gallery/dataset/5163ad540c0b5e5b22000383\n\nhttps://rpubs.com/macwanjason/cart\n\n\n**I used two stratifying variables - 1. state (51 states) 2. area code (3 levels)**\n\n\n**Codes for option 1**\n```{r}\nCHURN_STA <- read.delim(\"~/CHURNDATA_ANALYSIS/CHURN_AREA.txt\")\n#head(CHURN_STA)\n#factor(CHURN_STA$Churn)\nzz=levels(CHURN_STA$State)\nk=length(zz)\nn=0;x=0\nfor(i in 1:k)\n{\nn[i]=length(which(CHURN_STA$State==zz[i]))\nx[i]=length(which(CHURN_STA$State==zz[i]&CHURN_STA$Churn==\"TRUE\"))\n}\n#----------------------------------------------------------------------------------\n```\n\n\n**REM and GLM**\n```{r}\nrequire(metafor)\n#classical\nyest=escalc(xi=x,ni=n,measure = \"PLO\")\nrr=rma(yi=yest$yi,vi=yest$vi)\n#Overall Estimates\nrr1=cbind(rr$b,rr$ci.lb,rr$ci.ub)\nOVR_EST=round(transf.ilogit(rr1),3)\ncolnames(OVR_EST)=c(\"EST\",\"LL\",\"UL\")\n\n#Individual Estimates\nIND_EST=cbind(transf.ilogit(yest$yi),transf.ilogit(yest$yi-(1.96*sqrt(yest$vi))),transf.ilogit(yest$yi+(1.96*sqrt(yest$vi))))\ncolnames(IND_EST)=c(\"EST\",\"LL\",\"UL\")\n\n#Between Variance Estimation\nBEV_EST=cbind(confint(rr)[[1]][1,1],confint(rr)[[1]][1,2],confint(rr)[[1]][1,3])\n\nOVR_EST\nround(IND_EST,3)\nround(BEV_EST,3)\n\nforest(rr,transf=transf.ilogit,digits = 3,refline=OVR_EST[1],xlab=paste(\"Bet_Var = \",round(BEV_EST[1],3)),cex.axis=1.15,cex.lab = 1.25)\n#----------------------------------------------------------------------------------\n#GLM\n#converting churn to numerical value\nfor(i in 1:k)\n    {\n  if(CHURN_STA$Churn[i] ==\"TRUE\") CHURN_STA$Churn1[i] = 1 else CHURN_STA$Churn1[i] = 0 \n}\nglm(CHURN_STA$Churn1 ~ CHURN_STA$State,family=binomial) \n\n#Atempting with Package logistf-to avoid convergence issues in glm function\nrequire(logistf)\nlogistf(formula = CHURN_STA$Churn1 ~ CHURN_STA$State)\n#Just check the time taken to converge\n```\n\n\n**Codes for option 2**\n```{r}\nCHURN_ARE_CODE <- read.delim(\"~/CHURNDATA_ANALYSIS/A_CODE_CHURN.txt\")\n#head(CHURN_ARE_CODE)\n#factor(CHURN_ARE_CODE$Churn)\nCHURN_ARE_CODE$A_Code1=factor(CHURN_ARE_CODE$A_Code)\nzzz=levels((CHURN_ARE_CODE$A_Code1))\nk=length(zzz)\nn=0;x=0\nfor(i in 1:k)\n{\n  n[i]=length(which(CHURN_ARE_CODE$A_Code1==zzz[i]))\n  x[i]=length(which(CHURN_ARE_CODE$A_Code1==zzz[i]&CHURN_ARE_CODE$Churn==\"TRUE\"))\n}\n```\n\n\n**REM and GLM**\n```{r}\nrequire(metafor)\nrequire(R2WinBUGS)\n#----------------------------------------------------------------------------------\n#classical\nyest=escalc(xi=x,ni=n,measure = \"PLO\")\nrr=rma(yi=yest$yi,vi=yest$vi)\n#Overall Estimates\nrr1=cbind(rr$b,rr$ci.lb,rr$ci.ub)\nOVR_EST=round(transf.ilogit(rr1),3)\ncolnames(OVR_EST)=c(\"EST\",\"LL\",\"UL\")\n\n#Individual Estimates\nIND_EST=cbind(transf.ilogit(yest$yi),transf.ilogit(yest$yi-(1.96*sqrt(yest$vi))),transf.ilogit(yest$yi+(1.96*sqrt(yest$vi))))\ncolnames(IND_EST)=c(\"EST\",\"LL\",\"UL\")\n\n#Between Variance Estimation\nBEV_EST=cbind(confint(rr)[[1]][1,1],confint(rr)[[1]][1,2],confint(rr)[[1]][1,3])\n\nOVR_EST\nround(IND_EST,3)\nround(BEV_EST,3)\n\nforest(rr,transf=transf.ilogit,digits = 3,refline=OVR_EST[1],xlab=paste(\"Bet_Var = \",round(BEV_EST[1],3)),cex.axis=1.15,cex.lab = 1.25)\n#----------------------------------------------------------------------------------\n#GLM\n#converting churn to numerical value\nfor(i in 1:k)\n    {\n  if(CHURN_ARE_CODE$Churn[i] ==\"TRUE\") CHURN_ARE_CODE$Churn1[i] = 1 else CHURN_ARE_CODE$Churn1[i] = 0 \n}\nlogreg=glm(CHURN_ARE_CODE$Churn1 ~ CHURN_ARE_CODE$A_Code1,family=binomial)\n\n#Atempting with Package logistf-to avoid convergence issues in glm function\nrequire(logistf)\nlogistf(formula = CHURN_ARE_CODE$Churn1 ~ CHURN_ARE_CODE$A_Code1)\n```\n\n\n",
    "created" : 1501210600597.000,
    "dirty" : false,
    "encoding" : "ISO8859-1",
    "folds" : "",
    "hash" : "161778311",
    "id" : "E5E6D35A",
    "lastKnownWriteTime" : 1501210566,
    "last_content_update" : 1501210566,
    "path" : "D:/Research/Churn/CHURN.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 15,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}